{"version":3,"file":"static/js/485.053f495d.chunk.js","mappings":"4NAGaA,EAAcC,EAAAA,EAAAA,GAAH,kKAUXC,EAAYD,EAAAA,EAAAA,GAAH,kFAKTE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,kDAITI,EAAcJ,EAAAA,EAAAA,IAAH,yCAIXK,EAAcL,EAAAA,EAAAA,EAAH,kI,mBCiBxB,EAhCmB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,UACGO,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,SAAUC,EAArC,EAAqCA,eAArC,OACV,SAACb,EAAD,WACE,UAACC,EAAD,CAAWa,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMV,GAA/C,WACE,SAACH,EAAD,CACEc,IAAMP,EAAD,UAPE,oCAOF,OAA8CA,GAA/BQ,EACpBC,IAAKP,KAEP,SAACR,EAAD,iBAAcO,QAAd,IAAcA,EAAAA,EAASE,QANXJ,EADN,KAajB,C,6HCvBYW,GAJYrB,EAAAA,EAAAA,IAAH,0CAIDA,EAAAA,EAAAA,GAAH,wI,mBCclB,EAfa,WACX,OAA4BsB,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,KAAKH,EAC1B,GAAE,KAGD,4BACE,SAACF,EAAD,gCACA,SAACM,EAAA,EAAD,CAAYrB,OAAQA,MAGzB,C,mMChBDsB,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAe,IAAIC,gBACrB,CACIC,QAAS,mCACTC,SAAU,QACVC,eAAe,IAIVR,EAAiB,mCAAG,sGACNG,EAAAA,EAAAA,IAAA,+BAAkCC,IAD5B,uBACrBK,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,yFACJT,EAAAA,EAAAA,IAAA,wBAA2BC,EAA3B,kBAAiDQ,IAD7C,uBACnBH,EADmB,EACnBA,KADmB,kBAEpBA,EAAKC,SAFe,2CAAH,sDAKfG,EAAY,mCAAG,WAAM5B,GAAN,yFACDkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,YAA0BmB,IADzB,uBAChBK,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKZK,EAAmB,mCAAG,WAAM7B,GAAN,yFACRkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,oBAAkCmB,IAD1B,uBACvBK,EADuB,EACvBA,KADuB,kBAExBA,EAAKM,MAFmB,2CAAH,sDAKnBC,EAAmB,mCAAG,WAAM/B,GAAN,yFACRkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,oBAAkCmB,IAD1B,uBACvBK,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesSList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  padding: 12px;\n  margin: 0 auto;\n  justify-content: center;\n  list-style: none;\n`;\n\nexport const MovieItem = styled.li`\n  background-color: white;\n  padding: 10px 10px 0 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 240px;\n`;\n\nexport const MoviesTitle = styled.p`\n  width: 200px;\n  margin: 0;\n  padding: 6px;\n  font-weight: 500;\n  font-size: 18px;\n  color: black;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesSList,\n  MovieItem,\n  MovieLink,\n  MoviePoster,\n  MoviesTitle,\n} from './MoviesList.styled';\nimport FileNotFound from '../../img/FileNotFound.jpg';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  return (\n    <MoviesSList>\n      {movies.map(({ id, poster_path, title, overview, original_title }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <MoviePoster\n              src={!poster_path ? FileNotFound : `${imgBaseUrl}${poster_path}`}\n              alt={overview}\n            />\n            <MoviesTitle>{title ?? original_title}</MoviesTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MoviesSList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      overview: PropTypes.string,\n      original_title: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const HeaderNav = styled.div`\n  display: flex;\n`;\n\nexport const Title = styled.h1`\n  margin: 0;\n  padding: 16px 16px 0 16px;\n  text-align: end;\n  /* font-size: 28px; */\n  font-weight: 300;\n`;\n","import { useEffect, useState } from 'react';\nimport { getTrandibgMovies } from 'services/fetchMovies';\nimport { Title } from './Home.styled';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrandibgMovies().then(setMovies);\n  }, []);\n\n  return (\n    <div>\n      <Title>Trending to week</Title>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\nconst searchParams = new URLSearchParams(\n    {\n        api_key: 'b026a5e55a93706d87a5f53b5d4e521f',\n        language: 'en-US',\n        include_adult: false,\n    }\n);\n\nexport const getTrandibgMovies = async () => {\n    const { data } = await axios.get(`/trending/movie/week?${searchParams}`);\n    return data.results;\n}\n\nexport const getMovieByQuery = async query => {\n    const { data } = await axios.get(`/search/movie?${searchParams}&query=${query}`);\n    return data.results;\n}\n\nexport const getMovieById = async id => {\n    const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n    return data;\n}\n\nexport const getCreditsByMovieId = async id => {\n    const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n    return data.cast;\n}\n\nexport const getReviewsByMovieId = async id => {\n    const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n    return data.results;\n}\n\n"],"names":["MoviesSList","styled","MovieItem","MovieLink","Link","MoviePoster","MoviesTitle","movies","location","useLocation","map","id","poster_path","title","overview","original_title","to","state","from","src","FileNotFound","alt","Title","useState","setMovies","useEffect","getTrandibgMovies","then","MoviesList","axios","searchParams","URLSearchParams","api_key","language","include_adult","data","results","getMovieByQuery","query","getMovieById","getCreditsByMovieId","cast","getReviewsByMovieId"],"sourceRoot":""}