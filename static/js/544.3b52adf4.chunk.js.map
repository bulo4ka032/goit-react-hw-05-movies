{"version":3,"file":"static/js/544.3b52adf4.chunk.js","mappings":"4NAGaA,EAAcC,EAAAA,EAAAA,GAAH,kKAUXC,EAAYD,EAAAA,EAAAA,GAAH,kFAKTE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,kDAITI,EAAcJ,EAAAA,EAAAA,IAAH,yCAIXK,EAAcL,EAAAA,EAAAA,EAAH,kI,SCDxB,EAjBmB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACT,EAAD,UACGO,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,SAAUC,EAArC,EAAqCA,eAArC,OACV,SAACb,EAAD,WACE,UAACC,EAAD,CAAWa,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMV,GAA/C,WACE,SAACH,EAAD,CAAac,IAAG,UANP,oCAMO,OAAkBP,GAAeQ,IAAKN,KACtD,SAACR,EAAD,iBAAcO,QAAd,IAAcA,EAAAA,EAASE,QAHXJ,EADN,KAUjB,C,mFCJD,UAda,WACX,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,KAAKH,EAC1B,GAAE,KAGD,0BACE,SAAC,IAAD,CAAYf,OAAQA,KAGzB,C,mMCfDmB,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAe,IAAIC,gBACrB,CACIC,QAAS,mCACTC,SAAU,UAILN,EAAiB,mCAAG,sGACNE,EAAAA,EAAAA,IAAA,+BAAkCC,IAD5B,uBACrBI,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,yFACJR,EAAAA,EAAAA,IAAA,wBAA2BC,EAA3B,kBAAiDO,IAD7C,uBACnBH,EADmB,EACnBA,KADmB,kBAEpBA,EAAKC,SAFe,2CAAH,sDAKfG,EAAY,mCAAG,WAAMxB,GAAN,yFACDe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,YAA0BgB,IADzB,uBAChBI,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKZK,EAAmB,mCAAG,WAAMzB,GAAN,yFACRe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,oBAAkCgB,IAD1B,uBACvBI,EADuB,EACvBA,KADuB,kBAExBA,EAAKM,MAFmB,2CAAH,sDAKnBC,EAAmB,mCAAG,WAAM3B,GAAN,yFACRe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,oBAAkCgB,IAD1B,uBACvBI,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesSList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  padding: 12px;\n  margin: 0 auto;\n  justify-content: center;\n  list-style: none;\n`;\n\nexport const MovieItem = styled.li`\n  background-color: white;\n  padding: 10px 10px 0 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MoviePoster = styled.img`\n  width: 240px;\n`;\n\nexport const MoviesTitle = styled.p`\n  width: 200px;\n  margin: 0;\n  padding: 6px;\n  font-weight: 500;\n  font-size: 18px;\n  color: black;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesSList,\n  MovieItem,\n  MovieLink,\n  MoviePoster,\n  MoviesTitle,\n} from './MoviesList.styled';\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  return (\n    <MoviesSList>\n      {movies.map(({ id, poster_path, title, overview, original_title }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <MoviePoster src={`${imgBaseUrl}${poster_path}`} alt={overview} />\n            <MoviesTitle>{title ?? original_title}</MoviesTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MoviesSList>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { getTrandibgMovies } from 'services/fetchMovies';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrandibgMovies().then(setMovies);\n  }, []);\n\n  return (\n    <div>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\nconst searchParams = new URLSearchParams(\n    {\n        api_key: 'b026a5e55a93706d87a5f53b5d4e521f',\n        language: 'en-US'\n    }\n);\n\nexport const getTrandibgMovies = async () => {\n    const { data } = await axios.get(`/trending/movie/week?${searchParams}`);\n    return data.results;\n}\n\nexport const getMovieByQuery = async query => {\n    const { data } = await axios.get(`/search/movie?${searchParams}&query=${query}`);\n    return data.results;\n}\n\nexport const getMovieById = async id => {\n    const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n    return data;\n}\n\nexport const getCreditsByMovieId = async id => {\n    const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n    return data.cast;\n}\n\nexport const getReviewsByMovieId = async id => {\n    const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n    return data.results;\n}\n\n"],"names":["MoviesSList","styled","MovieItem","MovieLink","Link","MoviePoster","MoviesTitle","movies","location","useLocation","map","id","poster_path","title","overview","original_title","to","state","from","src","alt","useState","setMovies","useEffect","getTrandibgMovies","then","axios","searchParams","URLSearchParams","api_key","language","data","results","getMovieByQuery","query","getMovieById","getCreditsByMovieId","cast","getReviewsByMovieId"],"sourceRoot":""}