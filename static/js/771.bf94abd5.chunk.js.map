{"version":3,"file":"static/js/771.bf94abd5.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin-top: 8px;\n  margin-bottom: 8px;\n  background-color: white;\n  padding: 16px 16px 24px;\n  display: flex;\n  gap: 24px;\n`;\n\nexport const Poster = styled.img``;\n\nexport const Title = styled.h1`\n  letter-spacing: 0.08em;\n`;\n\nexport const Score = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n`;\n\nexport const ScoreNum = styled.span`\n  font-weight: 500;\n`;\n\nexport const OverviewTitle = styled.h2``;\n\nexport const Overview = styled.p``;\n\nexport const GenresTitle = styled.h3``;\n\nexport const GenresList = styled.ul``;\n\nexport const Genre = styled.li``;\n","import {\n  Container,\n  Poster,\n  Title,\n  Score,\n  OverviewTitle,\n  Overview,\n  Genre,\n  GenresList,\n  GenresTitle,\n  ScoreNum,\n} from './MovieCard.styled';\nimport FileNotFound from '../../img/FileNotFound.jpg';\nconst MovieCard = ({ movie }) => {\n  const { poster_path, title, release_date, overview, genres, vote_average } =\n    movie;\n  const poster = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  const year = release_date.slice(0, 4);\n  const scores = `${vote_average.toFixed(1)} / 10`;\n  return (\n    <Container>\n      <Poster src={!poster_path ? FileNotFound : poster} alt=\"\" width=\"280\" />\n      <div>\n        <Title>\n          {title} ({year})\n        </Title>\n        <Score>\n          User score: <ScoreNum>{scores}</ScoreNum>\n        </Score>\n        <OverviewTitle>Overview</OverviewTitle>\n        <Overview>{overview}</Overview>\n        <GenresTitle>Genres</GenresTitle>\n        <GenresList>\n          {genres.map(({ name, id }) => (\n            <Genre key={id}>{name}</Genre>\n          ))}\n        </GenresList>\n      </div>\n    </Container>\n  );\n};\n\nexport default MovieCard;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nexport const GoBack = styled(Link)`\n  padding: 4px 10px;\n  background-color: #ffffffc7;\n  /* margin: 16px 16px 16px; */\n  display: flex;\n  text-decoration: none;\n  align-items: center;\n  max-width: 100px;\n  &:hover,\n  &:focus {\n    color: black;\n    font-weight: 500;\n    text-decoration: underline;\n  }\n`;\n\nexport const GoBackText = styled.span`\n  margin: 0 10px;\n  color: black;\n  font-size: 16px;\n  font-weight: 300;\n`;\n\nexport const MoreContainer = styled.div`\n  background-color: white;\n  margin-top: 8px;\n  min-width: auto;\n  min-height: auto;\n  display: flex;\n  padding: 8px 16px;\n  gap: 16px;\n`;\n\nexport const Arrow = styled(BsArrowLeft)`\n  color: black;\n`;\n\nexport const Container = styled.div`\n  padding: 8px 16px;\n`;\n\nexport const CastRevLink = styled(Link)`\n  /* background-color: white; */\n  text-decoration: none;\n  color: black;\n\n  &:hover,\n  &:focus {\n    font-weight: 500;\n    text-decoration: underline;\n  }\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { getMovieById } from 'services/fetchMovies';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Arrow,\n  GoBack,\n  GoBackText,\n  Container,\n  CastRevLink,\n  MoreContainer,\n} from './MovieDetails.styled';\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n  useEffect(() => {\n    getMovieById(movieId).then(setMovieDetails);\n  }, [movieId]);\n\n  if (!movieDetails) return null;\n\n  return (\n    <Container>\n      <MovieCard movie={movieDetails} />\n      <div>\n        <GoBack to={backLink}>\n          <Arrow />\n          <GoBackText>Go Back</GoBackText>\n        </GoBack>\n        <MoreContainer>\n          <CastRevLink to={'cast'} state={{ from: backLink }}>\n            Cast\n          </CastRevLink>\n          <CastRevLink to={'reviews'} state={{ from: backLink }}>\n            Reviews\n          </CastRevLink>\n        </MoreContainer>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\n\nconst searchParams = new URLSearchParams(\n    {\n        api_key: 'b026a5e55a93706d87a5f53b5d4e521f',\n        language: 'en-US'\n    }\n);\n\nexport const getTrandibgMovies = async () => {\n    const { data } = await axios.get(`/trending/movie/week?${searchParams}`);\n    return data.results;\n}\n\nexport const getMovieByQuery = async query => {\n    const { data } = await axios.get(`/search/movie?${searchParams}&query=${query}`);\n    return data.results;\n}\n\nexport const getMovieById = async id => {\n    const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n    return data;\n}\n\nexport const getCreditsByMovieId = async id => {\n    const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n    return data.cast;\n}\n\nexport const getReviewsByMovieId = async id => {\n    const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n    return data.results;\n}\n\n"],"names":["Container","styled","Poster","Title","Score","ScoreNum","OverviewTitle","Overview","GenresTitle","GenresList","Genre","movie","poster_path","title","release_date","overview","genres","vote_average","poster","year","slice","scores","toFixed","src","FileNotFound","alt","width","map","name","id","GoBack","Link","GoBackText","MoreContainer","Arrow","BsArrowLeft","CastRevLink","useState","movieDetails","setMovieDetails","movieId","useParams","backLink","useLocation","state","from","useEffect","getMovieById","then","to","Suspense","fallback","Loader","axios","searchParams","URLSearchParams","api_key","language","getTrandibgMovies","data","results","getMovieByQuery","query","getCreditsByMovieId","cast","getReviewsByMovieId"],"sourceRoot":""}