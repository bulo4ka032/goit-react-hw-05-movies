{"ast":null,"code":"var _jsxFileName = \"/Users/anna-mariia/goit-react-hw-05-movies/src/pages/Movies/Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'services/fetchMovies';\nimport { Container, Form, Title, Submit, Input } from './Movie.styled';\nimport { BsSearchHeart } from 'react-icons/bs';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport sad from '../../img/sad.png';\nimport Error from 'components/Error/Error';\nimport Start from 'components/Start/Start';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [status, setStatus] = useState('start');\n  useEffect(() => {\n    var _searchParams$get;\n\n    const query = (_searchParams$get = searchParams.get('query')) !== null && _searchParams$get !== void 0 ? _searchParams$get : '';\n    getMovieByQuery(query).then(setMovies);\n\n    if (movies.length > 0) {\n      setStatus('resolved');\n    }\n  }, [searchParams, movies]);\n\n  const handleChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setSearchParams(query !== '' ? {\n      query\n    } : {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Search Film\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          onChange: handleChange,\n          placeholder: \"Search search search\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Submit, {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(BsSearchHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), status === 'start' ? /*#__PURE__*/_jsxDEV(Start, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : status === 'resolved' ? /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Error, {\n      message: \"Try too search\",\n      img: sad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"IC3Yyv52XYZRkc5f/36i+RsA1gc=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/anna-mariia/goit-react-hw-05-movies/src/pages/Movies/Movies.jsx"],"names":["useEffect","useState","useSearchParams","getMovieByQuery","Container","Form","Title","Submit","Input","BsSearchHeart","MoviesList","sad","Error","Start","Movies","movies","setMovies","query","setQuery","searchParams","setSearchParams","status","setStatus","get","then","length","handleChange","evt","target","value","handleSubmit","preventDefault"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAsD,gBAAtD;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkClB,eAAe,EAAvD;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,OAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,UAAMiB,KAAK,wBAAGE,YAAY,CAACI,GAAb,CAAiB,OAAjB,CAAH,iEAAgC,EAA3C;AAEApB,IAAAA,eAAe,CAACc,KAAD,CAAf,CAAuBO,IAAvB,CAA4BR,SAA5B;;AACA,QAAID,MAAM,CAACU,MAAP,GAAgB,CAApB,EAAuB;AACrBH,MAAAA,SAAS,CAAC,UAAD,CAAT;AACD;AACF,GAPQ,EAON,CAACH,YAAD,EAAeJ,MAAf,CAPM,CAAT;;AASA,QAAMW,YAAY,GAAGC,GAAG,IAAI;AAC1BT,IAAAA,QAAQ,CAACS,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAR;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAGH,GAAG,IAAI;AAC1BA,IAAAA,GAAG,CAACI,cAAJ;AACAX,IAAAA,eAAe,CAACH,KAAK,KAAK,EAAV,GAAe;AAAEA,MAAAA;AAAF,KAAf,GAA2B,EAA5B,CAAf;AACD,GAHD;;AAIA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEa,YAAhB;AAAA,8BACE;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,QAAQ,EAAEJ,YAFZ;AAGE,UAAA,WAAW,EAAC,sBAHd;AAIE,UAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAeGL,MAAM,KAAK,OAAX,gBACC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADD,GAEGA,MAAM,KAAK,UAAX,gBACF,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEN;AAApB;AAAA;AAAA;AAAA;AAAA,YADE,gBAGF,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,gBAAf;AAAgC,MAAA,GAAG,EAAEJ;AAArC;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA9CD;;GAAMG,M;UAGoCZ,e;;;KAHpCY,M;AAgDN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'services/fetchMovies';\nimport { Container, Form, Title, Submit, Input } from './Movie.styled';\nimport { BsSearchHeart } from 'react-icons/bs';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport sad from '../../img/sad.png';\nimport Error from 'components/Error/Error';\nimport Start from 'components/Start/Start';\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [status, setStatus] = useState('start');\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n\n    getMovieByQuery(query).then(setMovies);\n    if (movies.length > 0) {\n      setStatus('resolved');\n    }\n  }, [searchParams, movies]);\n\n  const handleChange = evt => {\n    setQuery(evt.target.value);\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setSearchParams(query !== '' ? { query } : {});\n  };\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <label>\n          <Title>Search Film</Title>\n          <Input\n            type=\"text\"\n            onChange={handleChange}\n            placeholder=\"Search search search\"\n            required\n          />\n        </label>\n        <Submit type=\"submit\">\n          <BsSearchHeart />\n        </Submit>\n      </Form>\n      {status === 'start' ? (\n        <Start />\n      ) : status === 'resolved' ? (\n        <MoviesList movies={movies} />\n      ) : (\n        <Error message=\"Try too search\" img={sad} />\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}