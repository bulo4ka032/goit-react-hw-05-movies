{"ast":null,"code":"var _jsxFileName = \"/Users/anna-mariia/goit-react-hw-05-movies/src/components/Reviews/Reviews.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsByMovieId } from 'services/fetchMovies';\nimport { ReviewsList, ReviewItem, Author, Content } from './Reviews.styled';\nimport Error from 'components/Error/Error';\nimport sad from '../../img/sad.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reviews = () => {\n  _s();\n\n  const [reviews, setReviews] = useState([]);\n  const {\n    movieId\n  } = useParams();\n  useEffect(() => {\n    getReviewsByMovieId(movieId).then(setReviews);\n  }, [movieId]);\n  console.log(reviews);\n\n  if (reviews.length > 0) {\n    return /*#__PURE__*/_jsxDEV(ReviewsList, {\n      children: [' ', reviews.map(_ref => {\n        let {\n          author,\n          content,\n          id\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(ReviewItem, {\n          children: [/*#__PURE__*/_jsxDEV(Author, {\n            children: author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Content, {\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      message: \"Sorry, but there are no reviews yet\",\n      img: sad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(Reviews, \"mEsgJqVD6kB294UksvtGCo9zc0g=\", false, function () {\n  return [useParams];\n});\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/Users/anna-mariia/goit-react-hw-05-movies/src/components/Reviews/Reviews.jsx"],"names":["useEffect","useState","useParams","getReviewsByMovieId","ReviewsList","ReviewItem","Author","Content","Error","sad","Reviews","reviews","setReviews","movieId","then","console","log","length","map","author","content","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,MAAlC,EAA0CC,OAA1C,QAAyD,kBAAzD;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAcX,SAAS,EAA7B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,mBAAmB,CAACU,OAAD,CAAnB,CAA6BC,IAA7B,CAAkCF,UAAlC;AACD,GAFQ,EAEN,CAACC,OAAD,CAFM,CAAT;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;;AAEA,MAAIA,OAAO,CAACM,MAAR,GAAiB,CAArB,EAAwB;AACtB,wBACE,QAAC,WAAD;AAAA,iBACG,GADH,EAEGN,OAAO,CAACO,GAAR,CAAY,QAA6B;AAAA,YAA5B;AAAEC,UAAAA,MAAF;AAAUC,UAAAA,OAAV;AAAmBC,UAAAA;AAAnB,SAA4B;AACxC,4BACE,QAAC,UAAD;AAAA,kCACE,QAAC,MAAD;AAAA,sBAASF;AAAT;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,OAAD;AAAA,sBAAUC;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAiBC,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdD,MAcO;AACL,wBAAO,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,qCAAf;AAAqD,MAAA,GAAG,EAAEZ;AAA1D;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,CA3BD;;GAAMC,O;UAEgBR,S;;;KAFhBQ,O;AA6BN,eAAeA,OAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsByMovieId } from 'services/fetchMovies';\nimport { ReviewsList, ReviewItem, Author, Content } from './Reviews.styled';\nimport Error from 'components/Error/Error';\nimport sad from '../../img/sad.png';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviewsByMovieId(movieId).then(setReviews);\n  }, [movieId]);\n\n  console.log(reviews);\n\n  if (reviews.length > 0) {\n    return (\n      <ReviewsList>\n        {' '}\n        {reviews.map(({ author, content, id }) => {\n          return (\n            <ReviewItem key={id}>\n              <Author>{author}</Author>\n              <Content>{content}</Content>\n            </ReviewItem>\n          );\n        })}\n      </ReviewsList>\n    );\n  } else {\n    return <Error message=\"Sorry, but there are no reviews yet\" img={sad} />;\n  }\n};\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}