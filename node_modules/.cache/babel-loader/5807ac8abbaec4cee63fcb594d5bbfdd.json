{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/fetchMovies';\n\nconst MovieDetails = () => {\n  _s();\n\n  var _location$state$from, _location$state;\n\n  const [movieDetails, setMovieDetails] = useState(null);\n  const movieId = useParams();\n  const location = useLocation();\n  const backLink = (_location$state$from = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) !== null && _location$state$from !== void 0 ? _location$state$from : '/';\n  useEffect(() => {\n    getMovieById(movieId).then(setMovieDetails);\n  }, [movieId]);\n  if (!movieId) return null;\n};\n\n_s(MovieDetails, \"7nBTUKucwsqBXnCUH+/DcuTFOR0=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/Users/anna-mariia/goit-react-hw-05-movies/src/pages/MovieDetails/MovieDetails.jsx"],"names":["useEffect","useState","useLocation","useParams","getMovieById","MovieDetails","movieDetails","setMovieDetails","movieId","location","backLink","state","from","then"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,YAAT,QAA6B,sBAA7B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAAA;;AACzB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAMO,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAMM,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,QAAQ,8CAAGD,QAAQ,CAACE,KAAZ,oDAAG,gBAAgBC,IAAnB,uEAA2B,GAAzC;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACI,OAAD,CAAZ,CAAsBK,IAAtB,CAA2BN,eAA3B;AACD,GAFQ,EAEN,CAACC,OAAD,CAFM,CAAT;AAIA,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP;AACf,CAVD;;GAAMH,Y;UAEYF,S,EACCD,W;;;KAHbG,Y;AAYN,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/fetchMovies';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const movieId = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n  useEffect(() => {\n    getMovieById(movieId).then(setMovieDetails);\n  }, [movieId]);\n\n  if (!movieId) return null;\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}