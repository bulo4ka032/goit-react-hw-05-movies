{"ast":null,"code":"var _jsxFileName = \"/Users/anna-mariia/goit-react-hw-05-movies/src/components/MovieCard/MovieCard.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieCard = _ref => {\n  let {\n    movie\n  } = _ref;\n  const {\n    poster_path,\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres\n  } = movie;\n  const poster = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  const year = release_date.slice(0, 4);\n  const scores = `${(popularity / 1000).toFixed(1)} / 10`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: poster,\n      alt: \"\",\n      width: \"280\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [title, \" (\", year, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User score: scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MovieCard;\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["/Users/anna-mariia/goit-react-hw-05-movies/src/components/MovieCard/MovieCard.jsx"],"names":["MovieCard","movie","poster_path","title","release_date","popularity","overview","genres","poster","year","slice","scores","toFixed"],"mappings":";;;AAAA,MAAMA,SAAS,GAAG,QAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC/B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,YAAtB;AAAoCC,IAAAA,UAApC;AAAgDC,IAAAA,QAAhD;AAA0DC,IAAAA;AAA1D,MACJN,KADF;AAEA,QAAMO,MAAM,GAAI,mCAAkCN,WAAY,EAA9D;AACA,QAAMO,IAAI,GAAGL,YAAY,CAACM,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAb;AACA,QAAMC,MAAM,GAAI,GAAE,CAACN,UAAU,GAAG,IAAd,EAAoBO,OAApB,CAA4B,CAA5B,CAA+B,OAAjD;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEJ,MAAV;AAAkB,MAAA,GAAG,EAAC,EAAtB;AAAyB,MAAA,KAAK,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,mBACGL,KADH,QACYM,IADZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlBD;;KAAMT,S;AAoBN,eAAeA,SAAf","sourcesContent":["const MovieCard = ({ movie }) => {\n  const { poster_path, title, release_date, popularity, overview, genres } =\n    movie;\n  const poster = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n  const year = release_date.slice(0, 4);\n  const scores = `${(popularity / 1000).toFixed(1)} / 10`;\n\n  return (\n    <div>\n      <img src={poster} alt=\"\" width=\"280\" />\n      <div>\n        <h1>\n          {title} ({year})\n        </h1>\n        <p>User score: scores</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n"]},"metadata":{},"sourceType":"module"}