{"ast":null,"code":"var _jsxFileName = \"/Users/anna-mariia/goit-react-hw-05-movies/src/components/Cast/Cast.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCreditsByMovieId } from 'services/fetchMovies';\nimport { CastList } from './Cast.styled';\nimport CastCard from 'components/CastCard/CastCard';\nimport Error from 'components/Error/Error';\nimport sad from '../../img/sad.png'; // import NotFound from '../../img/notfound.png';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cast = () => {\n  _s();\n\n  const [cast, setCast] = useState([]);\n  const {\n    movieId\n  } = useParams();\n  useEffect(() => {\n    getCreditsByMovieId(movieId).then(setCast);\n  }, [movieId]);\n\n  if (cast.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      message: \"Sorry, but we don't know about cast yet\",\n      img: sad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(CastList, {\n      children: cast.map(_ref => {\n        let {\n          profile_path,\n          name,\n          character,\n          id\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(CastCard, {\n          profile: profile_path,\n          name: name,\n          role: character\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Cast, \"58Po8rzdB+pqmLH2STJHfo7R3No=\", false, function () {\n  return [useParams];\n});\n\n_c = Cast;\nexport default Cast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"sources":["/Users/anna-mariia/goit-react-hw-05-movies/src/components/Cast/Cast.jsx"],"names":["useEffect","useState","useParams","getCreditsByMovieId","CastList","CastCard","Error","sad","Cast","cast","setCast","movieId","then","length","map","profile_path","name","character","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB,C,CACA;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAcT,SAAS,EAA7B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,mBAAmB,CAACQ,OAAD,CAAnB,CAA6BC,IAA7B,CAAkCF,OAAlC;AACD,GAFQ,EAEN,CAACC,OAAD,CAFM,CAAT;;AAGA,MAAIF,IAAI,CAACI,MAAL,KAAgB,CAApB,EAAuB;AACrB,wBACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,yCAAf;AAAyD,MAAA,GAAG,EAAEN;AAA9D;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJD,MAIO;AACL,wBACE,QAAC,QAAD;AAAA,gBACGE,IAAI,CAACK,GAAL,CAAS;AAAA,YAAC;AAAEC,UAAAA,YAAF;AAAgBC,UAAAA,IAAhB;AAAsBC,UAAAA,SAAtB;AAAiCC,UAAAA;AAAjC,SAAD;AAAA,4BACR,QAAC,QAAD;AAEE,UAAA,OAAO,EAAEH,YAFX;AAGE,UAAA,IAAI,EAAEC,IAHR;AAIE,UAAA,IAAI,EAAEC;AAJR,WACOC,EADP;AAAA;AAAA;AAAA;AAAA,gBADQ;AAAA,OAAT;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;AACF,CAzBD;;GAAMV,I;UAEgBN,S;;;KAFhBM,I;AA2BN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCreditsByMovieId } from 'services/fetchMovies';\nimport { CastList } from './Cast.styled';\nimport CastCard from 'components/CastCard/CastCard';\nimport Error from 'components/Error/Error';\nimport sad from '../../img/sad.png';\n// import NotFound from '../../img/notfound.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCreditsByMovieId(movieId).then(setCast);\n  }, [movieId]);\n  if (cast.length === 0) {\n    return (\n      <Error message=\"Sorry, but we don't know about cast yet\" img={sad} />\n    );\n  } else {\n    return (\n      <CastList>\n        {cast.map(({ profile_path, name, character, id }) => (\n          <CastCard\n            key={id}\n            profile={profile_path}\n            name={name}\n            role={character}\n          />\n        ))}\n      </CastList>\n    );\n  }\n};\n\nexport default Cast;\n"]},"metadata":{},"sourceType":"module"}