{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { getCreditsByMovieId } from 'services/fetchMovies';\n\nconst Cast = () => {\n  _s();\n\n  var _location$state$from, _location$state;\n\n  const [cast, setCast] = useState(null);\n  const {\n    movieId\n  } = useParams();\n  const location = useLocation();\n  const backLink = (_location$state$from = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) !== null && _location$state$from !== void 0 ? _location$state$from : '/';\n  useEffect(() => {\n    getCreditsByMovieId(movieId).then(setCast);\n  }, [movieId]);\n  console.log(movieId);\n};\n\n_s(Cast, \"u/iPfJSvqnSTIvfYW+ocgtlV35U=\", false, function () {\n  return [useParams, useLocation];\n});\n\n_c = Cast;\nexport default Cast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"sources":["/Users/anna-mariia/goit-react-hw-05-movies/src/components/Cast/Cast.jsx"],"names":["useEffect","useState","useParams","useLocation","getCreditsByMovieId","Cast","cast","setCast","movieId","location","backLink","state","from","then","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,SAASC,mBAAT,QAAoC,sBAApC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAcN,SAAS,EAA7B;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,8CAAGD,QAAQ,CAACE,KAAZ,oDAAG,gBAAgBC,IAAnB,uEAA2B,GAAzC;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,mBAAmB,CAACI,OAAD,CAAnB,CAA6BK,IAA7B,CAAkCN,OAAlC;AACD,GAFQ,EAEN,CAACC,OAAD,CAFM,CAAT;AAGAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACD,CAVD;;GAAMH,I;UAEgBH,S,EACHC,W;;;KAHbE,I;AAYN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { getCreditsByMovieId } from 'services/fetchMovies';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getCreditsByMovieId(movieId).then(setCast);\n  }, [movieId]);\n  console.log(movieId);\n};\n\nexport default Cast;\n"]},"metadata":{},"sourceType":"module"}